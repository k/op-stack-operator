apiVersion: optimism.optimism.io/v1alpha1
kind: OpNode
metadata:
  labels:
    app.kubernetes.io/name: op-stack-operator
    app.kubernetes.io/managed-by: kustomize
  name: opnode-sample
spec:
  # Reference to the OptimismNetwork
  optimismNetworkRef:
    name: optimismnetwork-sample
    namespace: default
  
  # Node type: sequencer or replica
  nodeType: replica
  
  # Sequencer reference (only for replica nodes)
  sequencerRef:
    name: "op-sepolia-sequencer"  # Name of the sequencer OpNode
    # namespace: "default"        # Optional: specify if sequencer is in different namespace
  
  # op-node configuration
  opNode:
    syncMode: execution-layer
    
    # P2P configuration
    p2p:
      enabled: true
      listenPort: 9003
      discovery:
        enabled: true  # Set to false for sequencers
        bootnodes:
          - "enr://..."
      static: []
      peerScoring:
        enabled: true
      bandwidthLimit: "10MB"
      privateKey:
        generate: true
    
    # RPC configuration
    rpc:
      enabled: true
      host: "0.0.0.0"
      port: 9545
      enableAdmin: false  # Set to true for sequencers
      cors:
        origins: ["*"]
        methods: ["GET", "POST"]
    
    # Sequencer configuration (only for sequencer nodes)
    sequencer:
      enabled: false  # Set to true for sequencer nodes
      blockTime: "2s"
      maxTxPerBlock: 1000
    
    # Engine API configuration
    engine:
      jwtSecret:
        generate: true
      endpoint: "http://127.0.0.1:8551"
  
  # op-geth configuration
  opGeth:
    network: op-sepolia
    dataDir: "/data/geth"
    
    # Storage configuration
    storage:
      size: 1Ti
      storageClass: fast-ssd
      accessMode: ReadWriteOnce
    
    # Sync configuration
    syncMode: snap
    gcMode: full
    stateScheme: path
    
    # Database configuration
    cache: 4096  # MB
    dbEngine: pebble
    
    # Networking configuration
    networking:
      http:
        enabled: true
        host: "0.0.0.0"
        port: 8545
        apis: ["web3", "eth", "net", "debug"]
        cors:
          origins: ["*"]
          methods: ["GET", "POST"]
      
      ws:
        enabled: true
        host: "0.0.0.0"
        port: 8546
        apis: ["web3", "eth", "net"]
        origins: ["*"]
      
      authrpc:
        host: "127.0.0.1"
        port: 8551
        apis: ["engine", "eth"]
      
      p2p:
        port: 30303
        maxPeers: 50
        noDiscovery: false  # Set to true for sequencers
        netRestrict: ""
        static: []
    
    # Transaction pool configuration
    txpool:
      locals: []
      noLocals: true
      journal: "transactions.rlp"
      journalRemotes: false
      lifetime: "1h"
      priceBump: 10
      accountSlots: 16
      globalSlots: 5120
      accountQueue: 64
      globalQueue: 1024
    
    # Rollup-specific configuration
    rollup:
      disableTxPoolGossip: false
      computePendingBlock: false
  
  # Resource configuration
  resources:
    opNode:
      requests:
        cpu: "500m"
        memory: "1Gi"
      limits:
        cpu: "2000m"
        memory: "4Gi"
    
    opGeth:
      requests:
        cpu: "2000m"
        memory: "8Gi"
      limits:
        cpu: "8000m"
        memory: "32Gi"
  
  # Service configuration
  service:
    type: ClusterIP
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: nlb
    ports:
      - name: geth-http
        port: 8545
        targetPort: 8545
        protocol: TCP
      - name: geth-ws
        port: 8546
        targetPort: 8546
        protocol: TCP
      - name: node-rpc
        port: 9545
        targetPort: 9545
        protocol: TCP
      - name: metrics
        port: 7300
        targetPort: 7300
        protocol: TCP
