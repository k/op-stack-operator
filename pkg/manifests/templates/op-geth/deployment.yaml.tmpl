apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Name }}-geth
  namespace: {{ .Namespace }}
  labels:
    app.kubernetes.io/name: op-geth
    app.kubernetes.io/instance: {{ .Name }}
    app.kubernetes.io/component: execution
    app.kubernetes.io/part-of: opstack
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: op-geth
      app.kubernetes.io/instance: {{ .Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: op-geth
        app.kubernetes.io/instance: {{ .Name }}
        app.kubernetes.io/component: execution
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: op-geth
        image: {{ .Image }}
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8545
          protocol: TCP
        - name: ws
          containerPort: 8546
          protocol: TCP
        - name: p2p
          containerPort: 30303
          protocol: TCP
        - name: metrics
          containerPort: 6060
          protocol: TCP
        - name: authrpc
          containerPort: 8551
          protocol: TCP
        env:
        - name: CHAIN_ID
          value: "{{ .ChainID }}"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Name }}-jwt
              key: jwt
        {{- if .Resources }}
        resources:
          {{- if .Resources.Requests }}
          requests:
            {{- if .Resources.Requests.Cpu }}
            cpu: {{ .Resources.Requests.Cpu }}
            {{- end }}
            {{- if .Resources.Requests.Memory }}
            memory: {{ .Resources.Requests.Memory }}
            {{- end }}
          {{- end }}
          {{- if .Resources.Limits }}
          limits:
            {{- if .Resources.Limits.Cpu }}
            cpu: {{ .Resources.Limits.Cpu }}
            {{- end }}
            {{- if .Resources.Limits.Memory }}
            memory: {{ .Resources.Limits.Memory }}
            {{- end }}
          {{- end }}
        {{- end }}
        volumeMounts:
        - name: data
          mountPath: /data
        - name: genesis
          mountPath: /genesis
          readOnly: true
        - name: jwt
          mountPath: /jwt
          readOnly: true
        command:
        - geth
        args:
        - --datadir=/data
        - --genesis=/genesis/genesis.json
        - --networkid={{ .ChainID }}
        - --http
        - --http.addr=0.0.0.0
        - --http.port=8545
        - --http.api=web3,debug,eth,txpool,net,engine
        - --http.corsdomain=*
        - --http.vhosts=*
        - --ws
        - --ws.addr=0.0.0.0
        - --ws.port=8546
        - --ws.api=web3,debug,eth,txpool,net,engine
        - --ws.origins=*
        - --authrpc.addr=0.0.0.0
        - --authrpc.port=8551
        - --authrpc.vhosts=*
        - --authrpc.jwtsecret=/jwt/jwt
        - --metrics
        - --metrics.addr=0.0.0.0
        - --metrics.port=6060
        - --syncmode=full
        - --gcmode=archive
        - --state.scheme=hash
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Name }}-geth-data
      - name: genesis
        configMap:
          name: {{ .Name }}-genesis
      - name: jwt
        secret:
          secretName: {{ .Name }}-jwt 